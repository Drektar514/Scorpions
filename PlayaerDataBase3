using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PlayersDataBase
{
    class Program
    {
        static void Main(string[] args)
        {
            PlayersList playerList = new PlayersList();
            bool active = true;
            string userInput;
            while (active)
            {
                Console.WriteLine("Добро пожаловать в базу данных\n1 - Добавить нового игрока\n" +
                    "2 - Заблокировать/разблокировать игрока по порядочному номеру\n" +
                    "3 - Удалить игрока\n4 - Выход из базы.");
                userInput = Console.ReadLine();
                switch (Convert.ToInt32(userInput))
                {
                    case 1:
                        playerList.AddPlayer();
                        break;
                    case 2:
                        playerList.ChangeStatusPlayer();
                        break;
                    case 3:
                        playerList.DeletePlayer();
                        break;
                    case 4:
                        Console.WriteLine("Выход из базы данных");
                        active = false;
                        Console.ReadKey();
                        break;
                    default:
                        Console.WriteLine("Введено неверное значение");
                        break;
                }
                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    public class Player
    {
        private string _nickName;
        public string NickName { get; private set; }
        private int _level;
        public int Level { get; private set; }
        public bool Banned { get; private set; } = false;
        public Player(string NickName, int Level)
        {
            _nickName = NickName;
            _level = Level;
        }

        public void ShowPlayerInfo()
        {
            if (Banned)
            {
                Console.WriteLine($"Игрок с ником - {_nickName} : {_level} уровня заблокирован");
            }
            else
                Console.WriteLine($"Игрок с ником - {_nickName} : {_level} уровня активен");
        }
        public void ChangeStatusPlayer()
        {
            Banned = !Banned;
        }
    }
   public class PlayersList
    {
        private List<Player> _players = new List<Player>();
        private int _playerNumber;
        public void AddPlayer()
        {
            Console.WriteLine("Добавляем нового игрока.");
            Console.WriteLine("Введите имя нового игрока: ");
            string NickName = Console.ReadLine();
            Console.WriteLine("Введите уровень нового игрока: ");
            int Level = Convert.ToInt32(Console.ReadLine());
            Player player = new Player(NickName,Level);
            _players.Add(player);
            Console.WriteLine($"Игрок с ником - {NickName} добавлен и имеет уровень {Level}.");
        }
        public void ShowAllPlayers()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                Console.Write($"{i}. ");
                _players[i].ShowPlayerInfo();
            }
        }
        public void ChangeStatusPlayer()
        {
            Console.WriteLine("Введите номер игрока которого вы хотите заблокировать/разблокировать?");
            ShowAllPlayers();
            _playerNumber = Convert.ToInt32(Console.ReadLine());
            _players[_playerNumber].ChangeStatusPlayer();
        }
        public void DeletePlayer()
        {
            Console.WriteLine("Какого игрока вы хотите удалить?");
            ShowAllPlayers();
            _playerNumber =Convert.ToInt32(Console.ReadLine());
            Console.Write("Вы удалили игрока: ");
            _players[_playerNumber].ShowPlayerInfo();
            _players.RemoveAt(_playerNumber);
        }

    }

}
